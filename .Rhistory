Forbes200
Forbes2000
library(tidyverse)
Forbes2000
data("Forbes2000", package="HSAUR")
install.packages("HSAUR")
data("Forbes2000", package="HSAUR")
ls()
Forbes2000
View(Forbes2000)
class(Forbes2000[, "rank"])
?rank
Forbes2000[, "rank"]
class(Forbes2000[1, "rank"])
class(Forbes2000[1:50, "rank"])
class(Forbes2000)
class(Forbes2000$rank)
seq(from=1, to=10, by=2)
seq(from=0, to=10, by=2)
Forbes2000[, "name"][1]
Forbes2000[1,]
levels(Forbes2000[, "category"])
table(Forbes2000[, "category"])
install.packages("RODBC")
library(RODBC)
cnct <- odbcConnectExcel("Forbes2000.xls")
GSS
options <- read.table("Survey.dat", header = T)
options <- read.table("Survey.dat", header = T)
sample(1:60, 3)
Carbon <- read.table("http://stat4ds.rwth-aachen.de/data/Carbon.dat", header=TRUE)
View(Carbon)
breaks <- seq(2.0, 10.0, by=1.0) # frequency dist. intervals of width 1 between 2 and 10
freq <- table(cut(Carbon$CO2, breaks, right=FALSE))
>freq
freq
summary(Carbon$CO2)
cut(Carbon$CO2, breaks, right=FALSE)
?cut
str(freq)
class(freq)
freq
freq <- table((Carbon$CO2, breaks, right=FALSE))
freq <- table((Carbon$CO2, breaks, right=FALSE))
freq <- table(Carbon$CO2, breaks, right=FALSE)
freq <- table(cut(Carbon$CO2, breaks, right=FALSE))
freq
Carbon$CO2, breaks, right=FALSE
?table
a <- c(1,1,1,2)
b <- c(2,2,2,3)
table(a,b)
table(cut(a,b))
table(cut(a,b, breaks))
rm(a, b)
cbind(freq, freq/nrow(Carbon))
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=FALSE)
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=FALSE)
plot(density(Carbon$CO2))
cbind(freq, freq/nrow(Carbon))
freq
class(freq)
library(tidyverse)
filter(Carbon, between(CO2, 5,6))
filter(Carbon, between(CO2, 3,4))
filter(Carbon, between(CO2, 3,3.99))
freq
freq <- table(cut(Carbon$CO2, breaks))
freq
freq <- table(cut(Carbon$CO2, breaks, right=T))
freq
freq <- table(cut(Carbon$CO2, breaks, right=FALSE))
freq
freq <- table(cut(Carbon$Nation, breaks, right=FALSE))
freq <- table(cut(Carbon$CO2, breaks, right=FALSE))
freq
cbind(freq, freq/nrow(Carbon))
nrow(Carbon
nrow(Carbon)
nrows(Carbon)
nrow(Carbon)
1/31
?cut
freq <- data.frame(cut(Carbon$CO2, breaks, right=FALSE))
View(freq)
cbind(freq, freq/nrow(Carbon))
freq <- data.frame(table(cut(Carbon$CO2, breaks, right=FALSE)))
View(freq)
freq <- summary(cut(Carbon$CO2, breaks, right=FALSE))
#The cut function divides the range of x into intervals
freq
cbind(freq, freq/nrow(Carbon))
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=FALSE)
class(freq)
a <- c(1,2,3,4,1,2,1,1,2,2,2)
table(a)
cut(Carbon$CO2, breaks, right=FALSE)
rm(a)
rm(Forbes2000)
class(cbind(freq, freq/nrow(Carbon)))
hist(Carbon$CO2, xlab="CO2", ylab="Proportion")#, freq=FALSE)
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=FALSE)
hist(Carbon$CO2, xlab="CO2", ylab="Proportion")#, freq=FALSE)
#The cut function divides the range of x into intervals
freq
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=T)
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=F)
cbind(freq, freq/nrow(Carbon))
freq <- table(cut(Carbon$CO2, breaks, right=T))
#The cut function divides the range of x into intervals
freq
cbind(freq, freq/nrow(Carbon))
freq <- table(cut(Carbon$CO2, breaks, right=F))
#The cut function divides the range of x into intervals
freq
cbind(freq, freq/nrow(Carbon))
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=F)
plot(density(Carbon$CO2))
c <- cbind(freq, freq/nrow(Carbon))
c
c <- data.frame(freq, freq/nrow(Carbon))
View(c)
freq <- table(cut(Carbon$CO2, breaks, right=F))
c <- data.frame(freq, freq/nrow(Carbon))
hist(c$Freq.1, xlab="CO2", ylab="Proportion", freq=F)
hist(c$Freq.1, xlab="CO2", ylab="Proportion", freq=T)
hist(c$Freq.1, xlab="CO2", ylab="Proportion", freq=F)
freq <- table(cut(Carbon$CO2, breaks, right=F))
#The cut function divides the range of x into intervals
freq
cbind(freq, freq/nrow(Carbon))
hist(Carbon$CO2, xlab="CO2", ylab="Proportion", freq=F)
plot(density(Carbon$CO2))
summary(Carbon$CO2) # 1st Qu = lower quartile, 3rd Qu = upper quartile
c(mean(Carbon$CO2), sd(Carbon$CO2), quantile(Carbon$CO2, 0.90))
boxplot(Carbon$CO2, xlab="CO2 values", horizontal=TRUE)
Crime <- read.table("http://stat4ds.rwth-aachen.de/data/Murder2.dat", header=TRUE)
View(Crime)
boxplot(Crime$murder ~ Crime$nation, xlab="Murder rate", horizontal=TRUE)
tapply(Crime$murder, Crime$nation, summary)
?tapply
tapply(Crime$murder, Crime$nation, mean)
tapply(Crime$murder, Crime$nation, summary)
tapply(Crime$murder, Crime$nation, boxplot())
tapply(Crime$murder, Crime$nation, summary)
summay(Crime$murder, Crime$nation)
summary(Crime$murder, Crime$nation)
summary(Crime$murder, Crime$nation)
Students <- read.table("http://stat4ds.rwth-aachen.de/data/Students.dat", header=TRUE)
rm(c)
View(Students)
View(Students)
sample(1:52000, 10)
Carbon_West <-read.table("http://stat4ds.rwth-aachen.de/data/Carbon_West.dat", header=TRUE)
View(Carbon_West)
summary(Carbon_West)
breaks <- seq(2.0, 17.0, by=1)
freq <- table(cut(Carbon_West$CO2, breaks, right=T))
freq
freq <- table(cut(Carbon_West$CO2, breaks, right=F))
freq
hist(freq)
cbind(freq, freq/nrow(Carbon_West$CO2))
cbind(freq, freq/nrow(Carbon_West))
hist(Carbon_West$CO2, freq=T)
hist(Carbon_West$CO2, freq=F)
plot(density(Carbon$CO2))
hist(Carbon_West$CO2, freq=F)
a <- cbind(freq, freq/nrow(Carbon_West))
View(a)
ggplot() + geom_histogram(aes(Carbon$CO2))
ggplot() + geom_histogram(aes(density(Carbon$CO2)))
ggplot() + geom_histogram(aes(a$V2))
Murder <-read.table("http://stat4ds.rwth-aachen.de/data/Murder.dat", header=TRUE)
summary(Murder)
summary(Murder$murder)
sd(Murder$murder)
cbind(mean(Murder$murder), sd(Murder$murder))
boxplot(Murder$murder)
View(Murder)
Murder <-read.table("http://stat4ds.rwth-aachen.de/data/Murder.dat", header=TRUE) %>%
filter(!Murder$state == DC)
Murder <-read.table("http://stat4ds.rwth-aachen.de/data/Murder.dat", header=TRUE) %>%
filter(!Murder$state == "DC")
boxplot(Murder$murder)
cbind(mean(Murder$murder), sd(Murder$murder))
Income <-read.table("http://stat4ds.rwth-aachen.de/data/Income.dat", header=TRUE)
hist(Income$income)
summary(Income$income)
plot(density(Income$income))
boxplot(Income$race)
boxplot(Income$income)
boxplot(filter(Income$income, Income$race=="Black"))
a <- filter(Income, Income$race=="Black")
boxplot(a)
boxplot(a$income)
View(Income)
a <- filter(Income, Income$race=="B")
boxplot(a$income)
a <- filter(Income, Income$race=="W")
boxplot(a$income)
a <- filter(Income, Income$race=="H")
boxplot(a$income)
table(Income$race)
summary(table(Income$race))
Houses <-read.table("http://stat4ds.rwth-aachen.de/data/Houses.dat", header=TRUE)
summary(Houses$price)
breaks(31, 881, by=1)
breaks <- sep(31, 881, by=1)
breaks <- seq(31, 881, by=1)
freq <- table(cut(Houses$price, breaks, right=F))
freq
breaks <- seq(31, 881, by=30)
freq <- table(cut(Houses$price, breaks, right=F))
freq
cbind(freq, freq/nrow(Houses))
hist(Houses$price)
breaks <- seq(31, 881, by=100)
freq <- table(cut(Houses$price, breaks, right=F))
freq
cbind(freq, freq/nrow(Houses))
sd(Houses$prices)
sd(Houses$price)
boxplot(Houses$price)
View(Houses)
summary(Houses$price)
a <- filter(Houses$new==1)
a <- filter(Houses, Houses$new==1)
summary(a$price)
summary(Houses$price)
a <- filter(Houses, Houses$new==0)
summary(Houses$price)
summary(a$price)
a <- filter(Houses, Houses$new==1)
summary(a$price)
sd(a$price)
boxplot(a)
boxplot(a$price)
summary(Houses$price)
summary(a$price)
sd(Houses$price)
sd(a$price)
PriceH <- hist(price); hist(price)
PriceH <- hist(House$price); hist(House$price)
PriceH <- hist(Houses$price); hist(Houses$price)
PriceH <- hist(Houses$price); hist(Houses$price)
View(PriceH)
PriceH
PriceH <- hist(Houses$price)
PriceH
PriceH <- hist(Houses$price)
PriceH <- hist(Houses$price)
PriceH
PriceH$breaks
+ nrow(Houses)
length(case[mean(price)-sd(price)<price & price<mean(price+sd(price)]) /nrow(Houses)
tapply(Houses$price, Houses$new, summary)
scatter.smooth(Houses, price, size)
ggplot()+ geom_point(Houses, price, size)
ggplot()+ geom_point(aes(Houses, price, size))
ggplot(Houses)+ geom_point(aes(price, size))
corr(price, size)
cor(price, size)
cor(Houses, price, size)
cor(Houses$price, Houses$size)
Houses %>% summary(lm(price ~ size))
Houses %>% summary(lm(formula=price ~ size))
Houses %>% lm(formula=price ~ size)) %>% summary()
Houses %>% lm(formula=price ~ size) %>% summary()
summary(lm(Houses$price ~ Houses$size))
Houses %>% plot(prices, size)
plot(Houses$prices, Houses$size)
plot(x=Houses$prices, y=Houses$size)
plot(x=Houses$price, y=Houses$size)
cor(Students$hsgpa, Students$cogpa)
plot(Students$hsgpa, Students$cogpa)
summary(lm(Students$hsgpa~ Students$cogpa))
Happy <-read.table("http://stat4ds.rwth-aachen.de/data/Happy.dat", header=TRUE)
table(Happy$marital)
table(Happy$marital, Happy$happiness)
View(Happy)
table(Students$relig, Students$abor)
View(Students)
attach(Students)
table(Students$relig, Students$abor)
UN <-read.table("http://stat4ds.rwth-aachen.de/data/UN.dat", header=TRUE)
View(UN)
summary(UN$Prison)
hist(UN$Prison)
hist(UN)
hist(UN$Prison)
boxplot(UN$Prison)
cor(UN)
UN %>% cor(cbind(Prision, GDP))
library(tidyverse)
cor(cbind(UN$GDP, UN$HDI, UN$GII))
cor(cbind(UN$GDP, UN$HDI, UN$GII, UN$Fertility,
UN$CO2, UN$Homicide, UN$Prison, UN$Internet))
summary(lm(UN$GDP~UN$CO2))
summary(lm(UN$CO2, UN$GDP))
summary(lm(UN$CO2, UN$GDP))
summary(lm(UN$CO2~ UN$GDP))
as.matrix(UN)
heatmap(UN, scale="column")
heatmap(UN)
UN
UN <-read.table("http://stat4ds.rwth-aachen.de/data/UN.dat", header=TRUE)
UN1 <- UN[,-"Nation"]
UN1 <- UN[,-c("Nation")]
View(UN)
UN[,-c("Nation")]
UN1 <- UN[, 1]
UN1 <- UN[, -1]
as.matrix(UN1)
heatmap(UN1)
str(UN1)
as.numeric(UN1$Prison)
as.numeric(UN1$Prison, UN$Internet)
UN1 <- as.numeric(UN1$Prison, UN$Internet)
heatmap(UN1)
str(UN1)
ScotsRaces <- read.table("http://stat4ds.rwth-aachen.de/data/ScotsRaces.dat", header=TRUE)
attach(Races)
attach(ScotsRaces$Races)
par(mfrow=c(2,2)) # a matrix of 2x2 plots in one graph
boxplot(ScotsRaces$timeM)
boxplot(ScotsRaces$timeM); boxplot(ScotsRaces$timeW)
boxplot(ScotsRaces$timeM); boxplot(ScotsRaces$timeW)
hist(ScotsRaces$timeM); hist(ScotsRaces$timeW)
par(mfrow=c(1,1)) # a matrix of 2x2 plots in one graph
boxplot(ScotsRaces$timeM); boxplot(ScotsRaces$timeW)
hist(ScotsRaces$timeM); hist(ScotsRaces$timeW)
hist(ScotsRaces$timeM)
hist(ScotsRaces$timeM); hist(ScotsRaces$timeW)
summary(ScotsRaces$timeM) # (output not shown)
summary(ScotsRaces$timeW) # (output not shown)
par(mfrow=c(1,1)) # a matrix of 2x2 plots in one graph
par(mfrow=c(1,2)) # a matrix of 2x2 plots in one graph
boxplot(ScotsRaces$timeM); boxplot(ScotsRaces$timeW)
hist(ScotsRaces$timeM); hist(ScotsRaces$timeW)
par(mfrow=c(2,2)) # a matrix of 2x2 plots in one graph
boxplot(ScotsRaces$timeM); boxplot(ScotsRaces$timeW)
hist(ScotsRaces$timeM); hist(ScotsRaces$timeW)
summary(ScotsRaces$timeM) # (output not shown)
summary(ScotsRaces$timeW) # (output not shown)
dev.off() # reset the graphical parameter mfrow
plot(timeM, timeW)
plot(ScotsRaces$timeM, ScotsRaces$timeW)
cor(ScotsRaces$timeM, ScotsRaces$timeW) # output: [1] 0.9958732
summary(lm(ScotsRaces$timeW ~ ScotsRaces$timeM))
Sheep <- read.table("http://stat4ds.rwth-aachen.de/data/Sheep.dat", header=TRUE)
attach(Sheep)
tapply(weight, survival, summary) # (output not shown)
tapply(weight, survival, sd) # (output not shown)
boxplot(weight ~ survival, xlab="weight", horizontal=TRUE)
View(Sheep)
library(usethis)
edit_r_environ()
library(tidyverse)
data(PartyID)
PartID <- read.table("http://stat4ds.rwth-aachen.de/data/PartyID.dat", header=TRUE)
mosaicplot(PartyID)
PartyID <- read.table("http://stat4ds.rwth-aachen.de/data/PartyID.dat", header=TRUE)
rm(PartID)
mosaicplot(PartyID)
View(PartyID)
mosaicplot(table(PartyID$race, PartyID$id))
table(PartyID$race, PartyID$id)
sample(1:9, 8, 1)
sample(1:9, 1)
sample(1:9, 7,
replace=T) #So we have 7 days (our sample) and number 8 means will rain
sample(1:9, 7,
replace=T) #So we have 7 days (our sample) and number 8 means will rain
[1] 8 4 3 6 2 1 2
sample(1:9, 7,
replace=T) #So we have 7 days (our sample) and number 8 means will rain
rbinom(1, 7, 0.20)
rbinom(1, 7, 0.20)
rbinom(1, 7, 0.20)
repeat(30,(rbinom(1, 7, 0.20) ))
repeat(30, (rbinom(1, 7, 0.20))
repeat(12, a)
?repeat()
?repeat
rbinom(1, 7, 0.20)
rbinom(1, 7, 0.20)
rbinom(1, 7, 0.20)
rbinom(1, 7, 0.20) #1 simulation of 7 coin flips, prob = 0.20 of heads
rbinom(1, 7, 0.20) #1 simulation of 7 coin flips, prob = 0.20 of heads
rbinom(1, 7, 0.20) #1 simulation of 7 coin flips, prob = 0.20 of heads
rbinom(1, 7, 0.20) #1 simulation of 7 coin flips, prob = 0.20 of heads
#outcome 2 means that will be 2 heads in average if we toss a coin 7 times
rbind(7,1,0.20)
#outcome 2 means that will be 2 heads in average if we toss a coin 7 times
rbind(7, 1, 0.20)
#outcome 2 means that will be 2 heads in average if we toss a coin 7 times
rbinom(7, 1, 0.20)
#outcome 2 means that will be 2 heads in average if we toss a coin 7 times
rbinom(7, 1, 0.20)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
?rbindom
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
?rbinom()
rbinom(6, 1, 1/6)
rbinom(1, 1, 1/6)
rbinom(1, 1, 1/6)
rbinom(6, 0, 1/6)
rbinom(6, 0, 1/6)
1- rbinom(6, 0, 1/6)
?pbinom
?pbinom
pbinom(6, 0, 1/6)
qbinom(6, 0, 1/6)
dbinom(6, 0, 1/6)
dbinom(6, 1, 1/6)
dbinom(6, 1, 1/6)
dbinom(6, 1, 1/6)
pbinom(6, 1, 1/6)
pbinom(6, 1, 1/6)
qbinom(6, 1, 1/6)
rbinom(6, 1, 1/6)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
dbinom(1, 6, 1/6)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
dbinom(1, 6, 1/6)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
1-dbinom(1, 6, 1/6)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
dbinom(0, 6, 1/6)
#[1] 0 0 1 0 0 0 1, 1 indicates when we had a head
1-dbinom(0, 6, 1/6)
1-dbinom(0, 12, 1/6) + dbinom(1, 12, 1/6)
1-(dbinom(0, 12, 1/6) + dbinom(1, 12, 1/6))
1-(dbinom(0, 18, 1/6) + dbinom(1, 18, 1/6)+dbin(2, 18,1/6))
1-(dbinom(0, 18, 1/6) + dbinom(1, 18, 1/6)+dbinom(2, 18,1/6))
1-pbinom(0, 6, 1/6) #prob of getting at least 1 sixes when 6 fair dice are rolled
1-pbinom(0, 6, 1/6) #prob of getting at least 1 sixes when 6 fair dice are rolled
1-dbinom(0, 6, 1/6) #prob of getting at least 1 sixes when 6 fair dice are rolled
1-dbinom(0, 6, 1/6) #prob of getting at least 1 sixes when 6 fair dice are rolled
1-dbinom(x=0, size=6, prob=1/6) #prob of getting at least 1 sixes when 6 fair dice are rolled
